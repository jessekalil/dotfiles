-- general
lvim.colorscheme = "aura-soft-dark"
lvim.format_on_save = false
lvim.log.level = "info"
vim.opt.shiftwidth = 2
vim.opt.tabstop = 2
vim.opt.relativenumber = true
vim.opt.wrap = false

-- keymappings
lvim.leader = "space"

-- lvim.keys.normal_mode["<esc><esc>"] = "<cmd>nohlsearch<cr>"
-- lvim.keys.normal_mode["<C-s>"] = ":w<cr>"
-- lvim.keys.normal_mode["<S-l>"] = ":BufferLineCycleNext<CR>"
-- lvim.keys.normal_mode["<S-h>"] = ":BufferLineCyclePrev<CR>"

-- whichkey
-- lvim.builtin.which_key.mappings.f = { "<cmd>lua require('lir.float').toggle()<CR>", "Files" }

-- Builtins
lvim.builtin.alpha.active = true
lvim.builtin.alpha.mode = "dashboard"
lvim.builtin.terminal.active = true
lvim.builtin.nvimtree.setup.view.side = "left"
lvim.builtin.nvimtree.setup.renderer.icons.show.git = false

-- treesitter
lvim.builtin.treesitter.auto_install = false
lvim.builtin.treesitter.ensure_installed = {
  "javascript",
  "typescript",
  "lua",
  "json",
  "yaml",
  "html",
  "css",
  "bash",
  "go",
  "vue",
  "markdown",
  "dockerfile",
}
lvim.builtin.treesitter.ignore_install = { "haskell" }

-- LSP
lvim.lsp.installer.setup.automatic_installation = false

-- -- you can set a custom on_attach function that will be used for all the language servers
-- -- See <https://github.com/neovim/nvim-lspconfig#keybindings-and-completion>
-- lvim.lsp.on_attach_callback = function(client, bufnr)
--   local function buf_set_option(...)
--     vim.api.nvim_buf_set_option(bufnr, ...)
--   end
--   --Enable completion triggered by <c-x><c-o>
--   buf_set_option("omnifunc", "v:lua.vim.lsp.omnifunc")
-- end

-- local formatters = require("lvim.lsp.null-ls.formatters")

-- formatters.setup({
-- 	{
-- 		exe = "gofmt",
-- 		filetypes = { "go", "go.mod" },
-- 	},
-- 	{
-- 		exe = "goimports",
-- 		filetypes = { "go", "go.mod" },
-- 	},
-- 	{
-- 		exe = "prettier",
-- 		filetypes = { "markdown", "md", "javascript", "json", "typescript" },
-- 	},
-- 	{
-- 		exe = "stylua",
-- 		filetypes = { "lua" },
-- 	},
-- })

-- -- linters, formatters and code actions <https://www.lunarvim.org/docs/configuration/language-features/linting-and-formatting>
-- local formatters = require "lvim.lsp.null-ls.formatters"
-- formatters.setup {
  -- {
  --   exe = "gofmt",
  --   filetypes = { "go", "go.mod" },
  -- },
  -- {
  --   exe = "goimports",
  --   filetypes = { "go", "go.mod" },
  -- },
  -- {
  --   exe = "stylua",
  --   filetypes = { "lua" },
  -- },
  -- {
  --   exe = "prettier",
  --   filetypes = { "markdown", "md", "javascript", "json", "typescript", "vue" },
  -- },
-- }

-- local linters = require "lvim.lsp.null-ls.linters"
-- linters.setup {
--   { command = "flake8", filetypes = { "python" } },
--   {
--     command = "shellcheck",
--     args = { "--severity", "warning" },
--   },
-- }
-- local code_actions = require "lvim.lsp.null-ls.code_actions"
-- code_actions.setup {
--   {
--     exe = "eslint",
--     filetypes = { "typescript", "typescriptreact" },
--   },
-- }

-- -- Additional Plugins <https://www.lunarvim.org/docs/configuration/plugins/user-plugins>
lvim.plugins = {
  -- {
  --   "folke/trouble.nvim",
  --   cmd = "TroubleToggle",
  -- },
  {
    "baliestri/aura-theme",
    lazy = false,
    priority = 1000,
    config = function(plugin)
      vim.opt.rtp:append(plugin.dir .. "/packages/neovim")
      vim.cmd([[colorscheme aura-dark]])
    end
  },
  { "dracula/vim" },
  {
    "zbirenbaum/copilot-cmp",
    event = "InsertEnter",
    dependencies = { "zbirenbaum/copilot.lua" },
    config = function()
      vim.defer_fn(function()
        require("copilot").setup()
        require("copilot_cmp").setup()
      end, 100)
    end,
  },
}
